---
- name: Ensure Supervisor config paths are present.
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  loop:
    - "{{ supervisor_config_path }}"
    - "{{ supervisor_config_path }}/conf.d"

- name: Ensure Supervisor configuration is present.
  template:
    src: supervisord.conf.j2
    dest: "{{ supervisor_config_path }}/supervisord.conf"
    mode: 0644
  notify: restart supervisor

- name: Ensure Supervisor program configs are present.
  template:
    src: program.conf.j2
    dest: "{{ supervisor_config_path }}/conf.d/{{ item.name }}.conf"
    force: true
    owner: root
    group: root
    mode: 0644
  when: item.state|default('present') != 'absent'
  loop: "{{ supervisor_programs }}"
  notify: restart supervisor

- name: Check if Supervisor log file already exists.
  stat:
    path: "{{ supervisor_logfile }}"
  register: supervisor_logfile_result

- name: Create Supervisor log file.
  file:
    path: "{{ supervisor_logfile }}"
    owner: "{{ supervisor_user }}"
    group: "{{ supervisor_user }}"
    state: touch
  when: not supervisor_logfile_result.stat.exists

- name: Ensure Supervisor directory for socket and pid files is present.
  file:
    path: "{{ supervisor_unix_http_server_socket_base_dir }}"
    owner: "{{ supervisor_unix_http_server_chown_owner }}"
    group: "{{ supervisor_unix_http_server_chown_group }}"
    mode: 0755
    state: directory
  when: supervisor_unix_http_server_enable and (supervisor_unix_http_server_chown_owner != 'root' or supervisor_unix_http_server_chown_group != 'root')

- name: Check if Supervisor socket file already exists.
  stat:
    path: "{{ supervisor_unix_http_server_socket_path }}"
  register: supervisor_socket_file_result

- name: Create Supervisor socket file.
  file:
    path: "{{ supervisor_unix_http_server_socket_path }}"
    owner: "{{ supervisor_unix_http_server_chown_owner }}"
    group: "{{ supervisor_unix_http_server_chown_group }}"
    state: touch
  when: not supervisor_socket_file_result.stat.exists and supervisor_unix_http_server_enable and (supervisor_unix_http_server_chown_owner != 'root' or supervisor_unix_http_server_chown_group != 'root')

- name: Ensure unwanted Supervisor program configs are absent
  file:
    path: "{{ supervisor_config_path }}/conf.d/{{ item.name }}.conf"
    state: absent
  when: item.state|default('present') == 'absent'
  with_items: "{{ supervisor_programs }}"
  notify: restart supervisor
